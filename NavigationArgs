@Composable
fun Navigation(){
    val navController = rememberNavController()
    NavHost(navController = navController, startDestination=Screen.MainScreen.route){
        composable(route = Screen.MainScreen.route){
            MainScreen(navController = navController)
        }
        composable(
            route = Screen.DetailScreen.route + "/{name}",
            arguments = listOf(
                navArgument("name"){
                    type = NavType.StringType
                    defaultValue = "Phillipy"
                    nullable= true
                }
            )
        ){ entry->
            DetailScreen(name = entry.arguments?.getString("name"))
        
        }
    }
}
@Composable
fun MainScreen(navController : NavController){
    var text by remember {mutableStateOf("")}
    Column(
        verticalArrangement = Arrangement.Center,
        modifier = Modifier.fillMaxWidth()
                           .padding(horizontal = 50.dp)
    ){
        TextField(value = text, onValueChange = {text=it}, modifier=Modifier.fillMaxWidth())
        Spacer(modifier = Modifier.height(8.dp))
        Button(onClick = { navController.navigate(Screen.DetailScreen.withArgs(text)) }, modifier=Modifier.align(Alignment.End)){ Text(text = "To DetailScreen")}
    }
}
@Composable
fun DetailScreen(name:String?){
    Box(contentAlignment = Alignment.Center, modifier=Modifier.fillMaxSize()){
        Text(text= "Hello $name")
    }
}


/**Screen.kt*/
sealed class Screen(val route: String){
    object MainScreen : Screen("main_screen")
    object DetailScreen : Screen("detail_screen")
    
    fun withArgs(vararg args : String) : String{
        return buildString{
            append(route)
            args.forEach{ arg->
                append("/$arg")
            }
        }
    }
}
